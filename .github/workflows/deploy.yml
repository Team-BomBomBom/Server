name: Deploy to AWS ECS on Fargate

on:
  push:
    branches: [ "develop" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest


    env:
      AWS_REGION: ap-northeast-2
      ECR_REPOSITORY: devs-spring-boot
      ECS_SERVICE: devs-spring-server-service
      ECS_CLUSTER: devs-cluster-be-01
      ECS_TASK_DEFINITION: ./devs-spring-server-task.json
      CONTAINER_NAME: spring-boot

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Restore jar
        uses: actions/cache@v3
        with:
          path: |
            app/external-api/build/libs
          restore-keys: ${{ runner.os }}-cached-jar-

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ECR_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Image to Amazon ECR
        uses: docker/build-push-action@v3
        id: build-and-push-image
        with:
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ steps.login-ecr.outputs.registry }}:${{ github.sha }}
          platforms: linux/arm64
          cache-from: type=gha
          cache-to: type=gha, mode=max

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-and-push-image.outputs.imageid }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
